import cv2import easyocrimport timeimport mysql.connectorimport matplotlib as pltfrom PIL import ImageEnhanceimport numpy as npdef data_entry(TEXT,ACURACY):    passw = int(input("enter the password of mysql"))    mydb=mysql.connector.connect(host="localhost",user="root",password=passw)    my_cursor=mydb.cursor()    my_cursor.execute("use aravality")    print("Welcome to the MySQL monitor.  Commands end with ; or \g.")    print("Your MySQL connection id is 2")    print("Server version: 5.7.40-log MySQL Community Server (GPL)")    print("Copyright (c) 2000, 2022, Oracle and/or its affiliates.")    print("Oracle is a registered trademark of Oracle Corporation and/or its")    print("affiliates. Other names may be trademarks of their respective owners.")    print("Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.")    i=0    my_cursor.execute("insert into plate values("+I+","+TEXT+","+ACURACY+");")    mydb.commit()url4="http://192.168.43.253:4747/video"url1="http://192.168.43.253:4747/video"url2="http://192.168.43.1:4747/video"url3="http://192.168.80.35:4747/video"url5="http://192.168.137.171:4747/video"url6="http://10.67.168.192:4747/video"print("---------------------------------------------------------------------starting---------------------------------------------------------------------")#allow list providedGFG=[]classnames="C:/Users/Admin/PycharmProjects/pythonProject/venv/csv.nam"with open(classnames,'rt') as f:    GFG=f.read().rstrip('\n').split('\n')result1=0#initiating readerreader=easyocr.Reader(['en'],verbose=False,gpu=False)result=""#video frame capturingcap=cv2.VideoCapture("")#starting time to be captureda=time.time()print("start : ",a)print("/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-|||loading|||-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/")#initiating loop untill frame is stopedwhile(True):    ret,img=cap.read()    #img=img1[0:690,10:496]    img_gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)    _,img_thresh2=cv2.threshold(img_gray,130,255,cv2.THRESH_TOZERO)    contours, hierarchy=cv2.findContours(img_thresh2,mode=cv2.RETR_TREE,method=cv2.CHAIN_APPROX_NONE)    i=0    for contour in contours:        (x,y,w,h)=cv2.boundingRect(contour)        area=cv2.contourArea(contour)        if i==0:            i=1            continue        approx=cv2.approxPolyDP(contour,0.01* cv2.arcLength(contour,True),True)        cv2.drawContours(img,(contour),0,(0,0,255),5)        M=cv2.moments(contour)        if M['m00']!=0.0:            x=int(M['m10']/M['m00'])            y=int(M['m01']/M['m00'])            if len(approx)==4 and area>1000 and area<2500:                result=reader.readtext(img_thresh2,allowlist=GFG,text_threshold=0.8)                if len(result)!=0:                    text=result[0][1]                    text_score=result[0][2]                    if text!=result1 and text_score>0.85 and len(text)>7:                        print(text)                        print("result1",result1)                        result1=text                        b=time.time()                        print("result :",text,"accuracy:",text_score)                        print("stop : ",b)                        print("time taken to calculate is ",b-a)                        a=b                        print("------------------------------------------------YOUR DATA IS SAVED TO MYSQL FILE -----------------------------------------------")                    elif text_score>0.60 and text!=result1 and len(text)>7:                        print("the result is not accurate",text)                    else:                        print("text detected is of very low quality")                        print(text)    #cv2.imshow("dt",img)    if cv2.waitKey(1) & 0xFF==ord("d"):        breakprint("stop time ",time.time())cap.release()cv2.destroyAllWindows()